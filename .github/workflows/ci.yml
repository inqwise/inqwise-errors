name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test on JDK ${{ matrix.java }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [21, 22]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v5
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven
        
    - name: Verify Maven configuration
      run: mvn help:effective-settings
      
    - name: Run tests
      run: mvn clean test
      
    - name: Upload coverage reports to Codecov
      if: matrix.java == '21'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./target/site/jacoco/jacoco.xml
        fail_ci_if_error: false
      
    - name: Generate test report
      uses: dorny/test-reporter@v2
      if: success() || failure()
      with:
        name: JDK ${{ matrix.java }} Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false

  build:
    name: Build and Verify
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
        
    - name: Compile and package
      run: mvn clean compile package
      
    - name: Verify JAR creation
      run: |
        ls -la target/
        if [ ! -f target/inqwise-errors-*.jar ]; then
          echo "JAR file not found!"
          exit 1
        fi
        
    - name: Generate Javadoc
      run: mvn javadoc:javadoc
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: maven-artifacts
        path: |
          target/*.jar
          target/site/apidocs/
        retention-days: 30

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
        
    - name: Run dependency check
      run: mvn dependency:analyze
      
    - name: Check for security vulnerabilities
      run: mvn dependency:tree
      
    - name: Validate Maven project
      run: mvn validate
      
    - name: Security scan info
      run: |
        echo "üîí Security scanning available via dedicated Snyk workflow"
        echo "    - On pull requests and releases"
        echo "    - Monthly scheduled scans"
        echo "    - Manual dispatch available"
        echo "üí° This optimizes free tier usage while maintaining security coverage"
        echo "‚öôÔ∏è Configure SNYK_TOKEN in repository secrets to enable scanning"

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
        
    - name: Run integration tests
      run: mvn clean verify
      
    - name: Test RFC compliance
      run: mvn test -Dtest=RFC*

  release-check:
    name: Release Readiness
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [test, build, code-quality, integration-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
        
    - name: Check if ready for release
      run: |
        mvn clean package -DskipTests
        mvn source:jar javadoc:jar
        echo "‚úÖ Release artifacts can be generated successfully"
        
    - name: Validate release profile
      run: |
        if mvn help:all-profiles | grep -q "sonatype-oss-release"; then
          echo "‚úÖ Release profile found"
        else
          echo "‚ö†Ô∏è Release profile not found - manual release process required"
        fi